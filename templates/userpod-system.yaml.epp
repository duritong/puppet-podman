<%| String $name,
    Stdlib::Unixpath $volumes_base_dir,
    Optional[Stdlib::Unixpath] $container_env_dir = undef,
    Optional[Stdlib::Unixpath] $tmp_dir = undef,
    Boolean $volumes_containers_gid_share = true,
    Hash[Pattern[/^[A-Za-z0-9\-_\.]+$/],Hash] $containers = {},
    Podman::Socketports $socket_ports,
    Array[Variant[Stdlib::Port,Pattern[/^\d+(\/(tcp|udp))?$/]]] $exposed_ports,
    Stdlib::Unixpath $pidfile,
    Struct[ { 'log-driver' => Enum['journald','k8s-file', 'none'], 'log-opt' => Struct[ {
      path => Optional[Stdlib::Unixpath],
      'max-size' => Optional[Pattern[/^\d+mb/]],
      tag => Optional[Pattern[/^[A-Za-z0-9\-_\.]+$/]],
    } ] } ] $logging = { 'log-driver' => 'journald', log-opt => {} },
    Optional[Enum['auto', 'keep-id', 'host', 'private']] $userns = undef,
    Optional[Enum['isolated','host']] $network_mode = undef,
    Optional[String] $selinux_label = undef,
|%>
name: '<%= $name %>'
volumes_base_dir: '<%= $volumes_base_dir %>'
volumes_containers_gid_share: <%= $volumes_containers_gid_share %>
<% if $container_env_dir { -%>
container_env_dir: <%= $container_env_dir %>
<% }
if $tmp_dir { -%>
tmp_dir: <%= $tmp_dir %>
<% }
if !empty($socket_ports) { -%>
socket_ports:
<%  $socket_ports.keys.sort.each |$port| {
      if empty($socket_ports[$port]) { -%>
  <%= $port %>: {}
<%    } else {
        ['dir','mode','security-opt-label-type'].each |$k| {
          if $k in $socket_ports[$port] { -%>
    <%= $k %>: <%= $socket_ports[$port][$k] %>
<%        }
      }
    }
  }
} -%>
exposed_ports: [<%= $exposed_ports.join(', ') %>]
<% if !empty($containers) { -%>
containers:
<% $containers.to_yaml.split("\n").each |$n| {
  if $n != '---' { -%>
  <%= $n %>
<%   }
  }
} -%>
pidfile: '<%= $pidfile %>'
logging:
  'log-driver': <%= $logging['log-driver'] %>
<% if $logging['log-opt'] { -%>
  'log-opt':
<%  $logging['log-opt'].each |$k,$v| { -%>
    '<%= $k %>': '<%= $v %>'
<% }
}
if $selinux_label { -%>
selinux_label: <%= $selinux_label %>
<% }
if $userns { -%>
userns: <%= $userns %>
<% }
if $network_mode { -%>
network_mode: <%= $network_mode %>
<% } -%>
